/* tslint:disable */
/* eslint-disable */
/**
 * PayPhone API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PayPhonePaymentButtonModelsConfirmSaleRequestModel
 */
export interface PayPhonePaymentButtonModelsConfirmSaleRequestModel {
    /**
     * Gets or sets the identifier.
     * @type {number}
     * @memberof PayPhonePaymentButtonModelsConfirmSaleRequestModel
     */
    id?: number;
    /**
     * Gets or sets the client tx identifier.
     * @type {string}
     * @memberof PayPhonePaymentButtonModelsConfirmSaleRequestModel
     */
    clientTxId?: string;
}

/**
 * Check if a given object implements the PayPhonePaymentButtonModelsConfirmSaleRequestModel interface.
 */
export function instanceOfPayPhonePaymentButtonModelsConfirmSaleRequestModel(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PayPhonePaymentButtonModelsConfirmSaleRequestModelFromJSON(json: any): PayPhonePaymentButtonModelsConfirmSaleRequestModel {
    return PayPhonePaymentButtonModelsConfirmSaleRequestModelFromJSONTyped(json, false);
}

export function PayPhonePaymentButtonModelsConfirmSaleRequestModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): PayPhonePaymentButtonModelsConfirmSaleRequestModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'clientTxId': !exists(json, 'clientTxId') ? undefined : json['clientTxId'],
    };
}

export function PayPhonePaymentButtonModelsConfirmSaleRequestModelToJSON(value?: PayPhonePaymentButtonModelsConfirmSaleRequestModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'clientTxId': value.clientTxId,
    };
}

