/* tslint:disable */
/* eslint-disable */
/**
 * PayPhone API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { PayPhoneButtonBusinessModelsSale } from './PayPhoneButtonBusinessModelsSale';
import {
    PayPhoneButtonBusinessModelsSaleFromJSON,
    PayPhoneButtonBusinessModelsSaleFromJSONTyped,
    PayPhoneButtonBusinessModelsSaleToJSON,
} from './PayPhoneButtonBusinessModelsSale';

/**
 * Cancellation model
 * @export
 * @interface PayPhoneButtonBusinessModelsCancellationModel
 */
export interface PayPhoneButtonBusinessModelsCancellationModel {
    /**
     * Cancellation identifier
     * @type {number}
     * @memberof PayPhoneButtonBusinessModelsCancellationModel
     */
    id?: number;
    /**
     * Status code of cancellation
     * @type {number}
     * @memberof PayPhoneButtonBusinessModelsCancellationModel
     */
    statusCode?: number;
    /**
     * Literal status of cancellation
     * @type {string}
     * @memberof PayPhoneButtonBusinessModelsCancellationModel
     */
    status?: string;
    /**
     * Client transaction id
     * @type {string}
     * @memberof PayPhoneButtonBusinessModelsCancellationModel
     */
    clientTransactionId?: string;
    /**
     * 
     * @type {PayPhoneButtonBusinessModelsSale}
     * @memberof PayPhoneButtonBusinessModelsCancellationModel
     */
    sale?: PayPhoneButtonBusinessModelsSale;
    /**
     * Message for this annul
     * @type {string}
     * @memberof PayPhoneButtonBusinessModelsCancellationModel
     */
    message?: string;
}

/**
 * Check if a given object implements the PayPhoneButtonBusinessModelsCancellationModel interface.
 */
export function instanceOfPayPhoneButtonBusinessModelsCancellationModel(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PayPhoneButtonBusinessModelsCancellationModelFromJSON(json: any): PayPhoneButtonBusinessModelsCancellationModel {
    return PayPhoneButtonBusinessModelsCancellationModelFromJSONTyped(json, false);
}

export function PayPhoneButtonBusinessModelsCancellationModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): PayPhoneButtonBusinessModelsCancellationModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'statusCode': !exists(json, 'statusCode') ? undefined : json['statusCode'],
        'status': !exists(json, 'status') ? undefined : json['status'],
        'clientTransactionId': !exists(json, 'clientTransactionId') ? undefined : json['clientTransactionId'],
        'sale': !exists(json, 'sale') ? undefined : PayPhoneButtonBusinessModelsSaleFromJSON(json['sale']),
        'message': !exists(json, 'message') ? undefined : json['message'],
    };
}

export function PayPhoneButtonBusinessModelsCancellationModelToJSON(value?: PayPhoneButtonBusinessModelsCancellationModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'statusCode': value.statusCode,
        'status': value.status,
        'clientTransactionId': value.clientTransactionId,
        'sale': PayPhoneButtonBusinessModelsSaleToJSON(value.sale),
        'message': value.message,
    };
}

