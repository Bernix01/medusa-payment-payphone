/* tslint:disable */
/* eslint-disable */
/**
 * PayPhone API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PayPhoneButtonBusinessModelsPrepareSaleModel
 */
export interface PayPhoneButtonBusinessModelsPrepareSaleModel {
    /**
     * Payment id generate
     * @type {string}
     * @memberof PayPhoneButtonBusinessModelsPrepareSaleModel
     */
    paymentId?: string;
    /**
     * Url for redirect and pay with PayPhone
     * @type {string}
     * @memberof PayPhoneButtonBusinessModelsPrepareSaleModel
     */
    payWithPayPhone?: string;
    /**
     * Url for redirect to PayPhone and pay only with your credit card
     * @type {string}
     * @memberof PayPhoneButtonBusinessModelsPrepareSaleModel
     */
    payWithCard?: string;
    /**
     * 
     * @type {string}
     * @memberof PayPhoneButtonBusinessModelsPrepareSaleModel
     */
    payWithPaymentCode?: string;
}

/**
 * Check if a given object implements the PayPhoneButtonBusinessModelsPrepareSaleModel interface.
 */
export function instanceOfPayPhoneButtonBusinessModelsPrepareSaleModel(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PayPhoneButtonBusinessModelsPrepareSaleModelFromJSON(json: any): PayPhoneButtonBusinessModelsPrepareSaleModel {
    return PayPhoneButtonBusinessModelsPrepareSaleModelFromJSONTyped(json, false);
}

export function PayPhoneButtonBusinessModelsPrepareSaleModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): PayPhoneButtonBusinessModelsPrepareSaleModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'paymentId': !exists(json, 'paymentId') ? undefined : json['paymentId'],
        'payWithPayPhone': !exists(json, 'payWithPayPhone') ? undefined : json['payWithPayPhone'],
        'payWithCard': !exists(json, 'payWithCard') ? undefined : json['payWithCard'],
        'payWithPaymentCode': !exists(json, 'payWithPaymentCode') ? undefined : json['payWithPaymentCode'],
    };
}

export function PayPhoneButtonBusinessModelsPrepareSaleModelToJSON(value?: PayPhoneButtonBusinessModelsPrepareSaleModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'paymentId': value.paymentId,
        'payWithPayPhone': value.payWithPayPhone,
        'payWithCard': value.payWithCard,
        'payWithPaymentCode': value.payWithPaymentCode,
    };
}

