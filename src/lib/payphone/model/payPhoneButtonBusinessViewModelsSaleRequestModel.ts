/**
 * PayPhone API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { PayPhoneButtonBusinessModelsOrder } from './payPhoneButtonBusinessModelsOrder';

/**
* 
*/
export class PayPhoneButtonBusinessViewModelsSaleRequestModel {
    /**
    * The user nickname optional if ChargeByNickName is false
    */
    'nickName'?: string;
    /**
    * If true the user find by nickname. Note the nickname in this case is required
    */
    'chargeByNickName'?: boolean;
    /**
    * User phone number optional if ChargeByNickName is true
    */
    'phoneNumber'?: string;
    /**
    * phone country code
    */
    'countryCode': string;
    /**
    * Store time zone
    */
    'timeZone'?: number;
    /**
    * Store Latitude
    */
    'lat'?: string;
    /**
    * Store longitude
    */
    'lng'?: string;
    /**
    * (Optional) Identifier of the user generated in the client application
    */
    'clientUserId'?: string;
    /**
    * (Optional) Field to send a reference of your purchase
    */
    'reference'?: string;
    /**
    * Optional parameter 1
    */
    'optionalParameter1'?: string;
    /**
    * Optional parameter 2
    */
    'optionalParameter2'?: string;
    /**
    * Optional parameter 3
    */
    'optionalParameter3'?: string;
    /**
    * (Optional) Deferred type example CF02010900
    */
    'deferredType'?: string;
    /**
    * Response Url where our server send the payment result
    */
    'responseUrl'?: string;
    'maxiDolar'?: boolean;
    'amount': number;
    'amountWithTax'?: number;
    'amountWithoutTax'?: number;
    'manualTax'?: boolean;
    'tax'?: number;
    'service'?: number;
    'tip'?: number;
    'clientTransactionId': string;
    'storeId'?: string;
    'terminalId'?: string;
    'currency'?: string;
    'order'?: PayPhoneButtonBusinessModelsOrder;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "nickName",
            "baseName": "nickName",
            "type": "string"
        },
        {
            "name": "chargeByNickName",
            "baseName": "chargeByNickName",
            "type": "boolean"
        },
        {
            "name": "phoneNumber",
            "baseName": "phoneNumber",
            "type": "string"
        },
        {
            "name": "countryCode",
            "baseName": "countryCode",
            "type": "string"
        },
        {
            "name": "timeZone",
            "baseName": "timeZone",
            "type": "number"
        },
        {
            "name": "lat",
            "baseName": "lat",
            "type": "string"
        },
        {
            "name": "lng",
            "baseName": "lng",
            "type": "string"
        },
        {
            "name": "clientUserId",
            "baseName": "clientUserId",
            "type": "string"
        },
        {
            "name": "reference",
            "baseName": "reference",
            "type": "string"
        },
        {
            "name": "optionalParameter1",
            "baseName": "optionalParameter1",
            "type": "string"
        },
        {
            "name": "optionalParameter2",
            "baseName": "optionalParameter2",
            "type": "string"
        },
        {
            "name": "optionalParameter3",
            "baseName": "optionalParameter3",
            "type": "string"
        },
        {
            "name": "deferredType",
            "baseName": "deferredType",
            "type": "string"
        },
        {
            "name": "responseUrl",
            "baseName": "responseUrl",
            "type": "string"
        },
        {
            "name": "maxiDolar",
            "baseName": "maxiDolar",
            "type": "boolean"
        },
        {
            "name": "amount",
            "baseName": "amount",
            "type": "number"
        },
        {
            "name": "amountWithTax",
            "baseName": "amountWithTax",
            "type": "number"
        },
        {
            "name": "amountWithoutTax",
            "baseName": "amountWithoutTax",
            "type": "number"
        },
        {
            "name": "manualTax",
            "baseName": "manualTax",
            "type": "boolean"
        },
        {
            "name": "tax",
            "baseName": "tax",
            "type": "number"
        },
        {
            "name": "service",
            "baseName": "service",
            "type": "number"
        },
        {
            "name": "tip",
            "baseName": "tip",
            "type": "number"
        },
        {
            "name": "clientTransactionId",
            "baseName": "clientTransactionId",
            "type": "string"
        },
        {
            "name": "storeId",
            "baseName": "storeId",
            "type": "string"
        },
        {
            "name": "terminalId",
            "baseName": "terminalId",
            "type": "string"
        },
        {
            "name": "currency",
            "baseName": "currency",
            "type": "string"
        },
        {
            "name": "order",
            "baseName": "order",
            "type": "PayPhoneButtonBusinessModelsOrder"
        }    ];

    static getAttributeTypeMap() {
        return PayPhoneButtonBusinessViewModelsSaleRequestModel.attributeTypeMap;
    }
}

