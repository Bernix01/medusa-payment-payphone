/* tslint:disable */
/* eslint-disable */
/**
 * PayPhone API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  PayPhonePaymentButtonModelsLinkViewModel,
} from '../models/index';
import {
    PayPhonePaymentButtonModelsLinkViewModelFromJSON,
    PayPhonePaymentButtonModelsLinkViewModelToJSON,
} from '../models/index';

export interface LinksPostRequest {
    model: PayPhonePaymentButtonModelsLinkViewModel;
}

/**
 * 
 */
export class LinksApi extends runtime.BaseAPI {

    /**
     * Request a pay link with specific amount
     */
    async linksPostRaw(requestParameters: LinksPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<string>> {
        if (requestParameters.model === null || requestParameters.model === undefined) {
            throw new runtime.RequiredError('model','Required parameter requestParameters.model was null or undefined when calling linksPost.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/Links`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: PayPhonePaymentButtonModelsLinkViewModelToJSON(requestParameters.model),
        }, initOverrides);

        if (this.isJsonMime(response.headers.get('content-type'))) {
            return new runtime.JSONApiResponse<string>(response);
        } else {
            return new runtime.TextApiResponse(response) as any;
        }
    }

    /**
     * Request a pay link with specific amount
     */
    async linksPost(requestParameters: LinksPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<string> {
        const response = await this.linksPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
